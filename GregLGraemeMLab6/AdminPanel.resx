<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>